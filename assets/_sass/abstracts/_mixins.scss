// Rem output with px fallback
@mixin fontSize($size) {
    font-size: $size; //Fallback in px
    font-size: calculate-rem($size);
}

// Center block
@mixin center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Clearfix
@mixin clearfix() {
    content: '';
    display: table;
    table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
    clear: both;
}

// Breakpoints
$breakpoint-xlarge: 90em;
$breakpoint-large: 62em;
$breakpoint-medium: 48em;
$breakpoint-small: 36em;
$breakpoint-xsmall: 25em;

@mixin breakpoint($break) {
    @if $break==xlarge {
        @media screen and (min-width: $breakpoint-xlarge) {
            @content;
        }
    } @else if $break==large {
        @media screen and (min-width: $breakpoint-large) {
            @content;
        }
    } @else if $break==medium {
        @media screen and (min-width: $breakpoint-medium) {
            @content;
        }
    } @else if $break==small {
        @media screen and (min-width: $breakpoint-small) {
            @content;
        }
    } @else if $break==xsmall {
        @media screen and (max-width: $breakpoint-xsmall) {
            @content;
        }
    } @else {
        @media screen and (min-width: $break) {
            @content;
        }
    }
}

// Box Shadow
/* @include box-shadow(1px,1px,1px,0, #fff, true); */

@mixin box-shadow($top, $left, $blur, $size, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $size $color;
        -moz-box-shadow: inset $top $left $blur $size $color;
        box-shadow: inset $top $left $blur $size $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $size $color;
        -moz-box-shadow: $top $left $blur $size $color;
        box-shadow: $top $left $blur $size $color;
    }
}

// Extend Background to full width of window
@mixin fullWidthBackground($background) {
    &::before,
    &::after {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        width: 100vw;
        height: 100%;
        background-color: $background;
    }

    &::before {
        right: calc(100% - 1px);
    }

    &::after {
        left: calc(100% - 1px);
    }
}

@mixin wipe-link-background($background-color: $yellow) {
    background-image: linear-gradient(
        to top,
        $background-color 75%,
        transparent 0%
    );
    background-position: unset;
    background-repeat: repeat-x;
    background-size: 100% 100%;
}

@mixin wipe-link-hover-background($background-color: $yellow, $width: 100%) {
    width: $width;
    background-image: linear-gradient(
        transparent calc(20%),
        $background-color 20%
    );
    background-repeat: no-repeat;
    background-size: 0% 100%;
    transition: all 0.2s ease-in-out;

    &:hover {
        background-size: 100% 100%;
    }
}

%link-underline {
    background-position: 0 1.04em;
    background-repeat: repeat-x;
    background-size: 8px 2px;
}

@mixin link-underline-background($background-color: $black) {
    background-image: linear-gradient(
        to right,
        $background-color 55%,
        transparent 55%
    );
    @extend %link-underline;
}

%arrow-icon {
  position: absolute;
  z-index: 10;
  top: 1px;
  color: $white;
  transition: all 0.2s ease-in-out;

  @include breakpoint("medium") {
    top: 2px;
  }
}

  %arrow-line {
    content: '';
    display: block;
    position: absolute;
    top: calc(50% - 1px);
    width: 1rem;
    height: 1px;
    background-color: $white;
    transition: all 0.2s ease-in-out;
  }

  %arrow-bg {
    content: '';
    display: inline-block;
    position: absolute;
    top: 0;
    background-color: $black;
    width: 2rem;
    height: 100%;
  }

@mixin pagination-arrows($direction: left) {
    $opposite: left;
    @if $direction == left {
        $opposite: right;
    }
    margin-#{$direction}: var(--pagination-prev-next-spacing);
    margin-#{$opposite}: 2rem;

    i {
      @extend %arrow-icon;
      #{$opposite}: 100%;

      &::after {
        @extend %arrow-line;
        #{$opposite}: -1px;
      }
    }

    &::after {
      @extend %arrow-bg;
      #{$opposite}: 100%;
    }

    &:not(:disabled):hover i {
      #{$opposite}: calc(100% + 1rem);

      &::after {
        width: calc(2rem - 1px);
        #{$opposite}: -1rem;
      }
    }
}
